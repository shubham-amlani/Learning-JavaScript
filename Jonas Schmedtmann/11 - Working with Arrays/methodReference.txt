/*<---------- Lecture: Summary: Which array method to use? ---------->

Theory lecture

--> We've learnt about 23 array method in JavaScript and we can do all operations with that we can possibly imagine with array in the language, but which method to use in what situation is a confusion, because 23 methods are a hell lot of methods and creates kind of a mess, so this lecture addressed that problem.

--> Best way to figure out which method to use in any situation is by starting to ask the question "What do I actually want to do with this array?"

---> To mutate the original array
  --> Add to original:
    -> .push (end)
    -> .unshift (start)

  --> Remove from original:
    -> .pop (end)
    -> .shift (start)
    -> .splice (any)

  --> Others:
    -> .reverse
    -> .sort
    -> .fill

---> A new array
  --> Computed from original:
    -> .map (loop)

  --> Filtered using condition:
    -> .filter
  
  --> Portion of original:
    -> .slice
  
  --> Adding original to other:
    -> .concat
  
  --> Flattening the original:
    -> .flat
    -> .flatMap

---> An array index
  --> Based on value:
    -> .indexOf

  --> Based on test condition:
    -> .findIndex

---> An array element
  --> Based on test condition
    -> .find

---> Know if array includes
  --> Based on value:
    -> .includes
  
  --> Based on test condition:
    -> .some
    -> .every

---> A new string
  --> Based on separator string:
   -> .join

---> To trasform to value
  --> Based on accumulator:
    -> .reduce (Boil down array to single value of any type: number, string, boolean, or even new array or object)

---> To just loop array
  --> Based on callback:
    -> .forEach (Does not create a new array and does not even produce any value, just loops over it)

----- and That's it -----
*/